{"version":3,"sources":["components/info.js","components/weather.js","components/form.js","App.js","index.js"],"names":["Info","React","Component","Weather","className","this","props","city","country","temp","pressure","sunset","error","Form","onSubmit","weatherMethod","type","name","placeholder","API_KEY","App","state","undefined","gettingWeather","e","a","preventDefault","target","elements","value","fetch","api_url","json","data","sys","date","Date","setTime","sunsetDate","getHours","getMinutes","setState","main","pr","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAaeA,E,4JAVb,WACE,OACE,gCACE,+IACA,mM,GALWC,IAAMC,WCkBVC,E,4JAjBb,WACE,OACE,sBAAKC,UAAU,YAAf,UACCC,KAAKC,MAAMC,MACZ,gCACD,uHAAoBF,KAAKC,MAAMC,KAA/B,KAAuCF,KAAKC,MAAME,WAClD,qGAAiBH,KAAKC,MAAMG,QAC5B,mFAAcJ,KAAKC,MAAMI,YACzB,sGAAkBL,KAAKC,MAAMK,aAG9B,mBAAGP,UAAU,QAAb,SAAsBC,KAAKC,MAAMM,e,GAZfX,IAAMC,WCWbW,E,4JAVb,WACE,OACE,uBAAMC,SAAUT,KAAKC,MAAMS,cAA3B,UACI,uBAAOC,KAAK,OAAOC,KAAK,OAAOC,YAAY,mCAC3C,kI,GALSjB,IAAMC,WCGnBiB,EAAU,mCAsFDC,E,4MAhFfC,MAAQ,CACNZ,UAAMa,EACNf,UAAMe,EACNd,aAASc,EACTZ,cAAUY,EACVX,YAAQW,EACRV,WAAOU,G,EAMPC,e,uCAAiB,WAAOC,GAAP,yBAAAC,EAAA,yDACfD,EAAEE,mBACInB,EAAOiB,EAAEG,OAAOC,SAASrB,KAAKsB,OAFrB,iCAOOC,MAAM,qDAAD,OAC4BvB,EAD5B,kBAC0CY,EAD1C,kBAPZ,cAOTY,EAPS,gBAWIA,EAAQC,OAXZ,OAWTC,EAXS,OAaXtB,EAASsB,EAAKC,IAAIvB,QAClBwB,EAAO,IAAIC,MACVC,QAAQ1B,GACT2B,EAAaH,EAAKI,WAAa,IAAMJ,EAAKK,aAI9C,EAAKC,SAAS,CACZhC,KAAMwB,EAAKS,KAAKjC,KAChBF,KAAM0B,EAAKhB,KACXT,QAASyB,EAAKC,IAAI1B,QAClBE,SAAUuB,EAAKS,KAAKhC,SACpBC,OAAQ2B,EACR1B,WAAOU,IA1BM,wBA6Bf,EAAKmB,SAAS,CACXhC,UAAMa,EACTf,UAAMe,EACNd,aAASc,EACTZ,cAAUY,EACVX,YAAQW,EACNV,MAAO,qIAnCM,4C,kGA0CjB,WACE,OACE,qBAAKR,UAAU,UAAf,SACA,qBAAKA,UAAU,OAAf,SACA,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,gBAAf,cAAgC,cAAC,EAAD,OAChC,sBAAMA,UAAU,gBAAhB,eAAkC,cAAC,EAAD,CAAMW,cAAeV,KAAKkB,iBAC9D,cAAC,EAAD,CACEd,KAAMJ,KAAKgB,MAAMZ,KACjBF,KAAMF,KAAKgB,MAAMd,KACjBC,QAASH,KAAKgB,MAAMb,QACpBE,SAAUL,KAAKgB,MAAMsB,GACrBhC,OAAQN,KAAKgB,MAAMV,OACnBC,MAAOP,KAAKgB,MAAMT,wB,GAtEVX,IAAMC,W,MCHxB0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.90c1437b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Info extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Погодное приложение</h2>\r\n        <p>Узнайте погоду в вашем городе!</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Info;\r\n","import React from \"react\";\r\n\r\nclass Weather extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"infoWeath\">\r\n      {this.props.city &&\r\n      <div>\r\n     <p>Местороложение: {this.props.city}, {this.props.country}</p>\r\n     <p>Температура: {this.props.temp}</p>\r\n     <p>Давление: {this.props.pressure}</p>\r\n     <p>Заход солнца: {this.props.sunset}</p>\r\n    </div>\r\n    }\r\n    <p className=\"error\">{this.props.error}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Weather;\r\n","import React from \"react\";\r\n\r\nclass Form extends React.Component {\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.weatherMethod}>\r\n          <input type=\"text\" name=\"city\" placeholder=\"Город\" />\r\n          <button>Получить погоду</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\nimport Info from \"./components/info\";\nimport Weather from \"./components/weather\";\nimport Form from \"./components/form\";\n\nconst API_KEY = \"b1ca49462ec3651909baa1c55353f233\";\n\n\n\nclass App extends React.Component {\n\nstate = {\n  temp: undefined,\n  city: undefined,\n  country: undefined,\n  pressure: undefined,\n  sunset: undefined,\n  error: undefined\n}\n\n\n\n\n  gettingWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n\n\n     if(city) {\n\n    const api_url = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n    );\n\n    const data = await api_url.json();\n\n    var sunset = data.sys.sunset;\n    var date = new Date();\n    date.setTime(sunset);\n    var sunsetDate = date.getHours() + \":\" + date.getMinutes();\n\n\n   \n    this.setState({\n      temp: data.main.temp,\n      city: data.name,\n      country: data.sys.country,\n      pressure: data.main.pressure,\n      sunset: sunsetDate,\n      error: undefined\n    });\n  } else {\n    this.setState({\n       temp: undefined,\n    city: undefined,\n    country: undefined,\n    pressure: undefined,\n    sunset: undefined,\n      error: \"Введите название города\"\n    });\n  \n  }\n  };\n\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n      <div className=\"main\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-5 info\"> <Info /></div>\n          <div  className=\"col-sm-7 form\">  <Form weatherMethod={this.gettingWeather} />\n        <Weather \n          temp={this.state.temp}\n          city={this.state.city}\n          country={this.state.country}\n          pressure={this.state.pr}\n          sunset={this.state.sunset}\n          error={this.state.error}\n        /></div>\n        </div>\n\n      </div>\n       </div>\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}